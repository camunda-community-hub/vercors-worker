cherry:
  connectorslib:
    uploadpath: ./localstorage/upload
    classloaderpath: ./localstorage/classloader
    forcerefresh: false
  runners:
    # the runtime load all embedded runners
    embeddedrunner: true

    # the runtime load ping runners - attention, pingConnector and pingObjectConnector are embedded
    pingrunner: false





# Connection is defined in application.yaml



server.port: 9081
logging.level.root: INFO

# return message with BAD_REQUEST to the client
server.error.include-message: always



# Spring Boot Configuration
spring:
  application.name: ZeebeCherry
  servlet:
    multipart:
      enabled: true
      max-file-size: 100MB
      max-request-size: 100MB


  jpa:
    generate-ddl: true
    hibernate.ddl-auto: "update"

    properties:
      hibernate:
        format_sql: true
        show-sql: true


  # spring.datasource:
  #   url: "jdbc:h2:file:./cherry.db"
  #   driver-class-name: "org.h2.Driver"
  #   username: "sa"
  #   password: "password"
  # spring.jpa.database-platform: "org.hibernate.dialect.H2Dialect"

  # Save statistics and information

  # --------------------- Postgres
  datasource:
    url: "jdbc:postgresql://localhost/cherrydb"
    username: "camunda"
    password: "camunda"
    driverClassName: "org.postgresql.Driver"
  jpa.databasePlatform: org.hibernate.dialect.PostgreSQLDialect

org:
  hibernate:
    dialect:
      dialect: org.hibernate.dialect.PostgreSQLDialect
# hibernate.jdbc.use_streams_for_binary: true

# spring.datasource.validation-query: SELECT 1;
# --------------------- H2
# spring.datasource:
#  url: "jdbc:h2:file:./cherry.db"
#  driver-class-name: "org.h2.Driver"
#  username: "sa"
#  password: "password"
# spring.jpa.database-platform: "org.hibernate.dialect.H2Dialect"
# org.hibernate.dialect: H2Dialect







# logging.level.org.hibernate.SQL: TRACE
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder: TRACE
# logging.level.org.hibernate.postgresql : TRACE
# spring.jpa.properties.hibernate.show_sql: true
# spring.jpa.properties.hibernate.use_sql_comments: true
# spring.jpa.properties.hibernate.format_sql: true
