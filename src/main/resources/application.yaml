cherry:
  connectorslib:
    uploadpath: ./localstorage/upload
    classloaderpath: ./localstorage/classloader
    forcerefresh: true


  runners:
    # the runtime load all embedded runners
    embeddedrunner: true

    # the runtime load ping runners
    pingrunner: false


  tenants:
    # Enable the tenants functionality "autoDectection" implie to connect to Operate
    automaticDetection: true
    refreshTenantsInMinutes: 1
    tenants-ids:


# Visit https://github.com/camunda-community-hub/spring-zeebe/?tab=readme-ov-file#connect-to-zeebe

# -------------------- Self Manage
camundaSimple:
  client:
    mode: simple
    zeebe:
      enabled: true
      gatewayUrl: http://localhost:26500
      preferRestOverGrpc: false
      executionThreads: 200
      defaults:
        maxJobsActive: 58
    operate:
      enabled: false
    tasklist:
      enabled: false

# -------------------- Self Manage Identity
camunda:
  client:
    mode: selfmanaged
    auth:
      clientId: zeebe
      clientSecret: AnDBsKoVjI

    zeebe:
      enabled: true
      gatewayUrl: http://localhost:26500
      preferRestOverGrpc: false
      audience: zeebe-api
operate3:
  client:
    profile: simple
    enabled: true
    base-url: http://localhost:8081
    session-timeout: PT10M
    username: demo
    password: demo
operate:
  client:
    profile: oidc
    enabled: true
    base-url: http://localhost:8081
    auth-url: http://localhost:18080/auth/realms/camunda-platform/protocol/openid-connect/token
    audience: operate-api
    client-id: operate
    client-secret: FK05vxEU8D
operate2:
  client:
    profile: oidc
    client-id: operate
    client-secret: FK05vxEU8D
    scope: # optional
    auth-url: http://localhost:18080/auth/realms/camunda-platform/protocol/openid-connect/token
    audience: operate-api

# -------------------- SAAS
camundaSaas:
  client:
    mode: saas
    auth:
      clientId: Lu.lVob..
      clientSecret: aoO.....
    clusterId: b16d70..
    region: jfk-1



server.port: 9081
logging.level.root: INFO


# return message with BAD_REQUEST to the client
server.error.include-message: always

# Spring Boot Configuration
spring.application.name: CherryRuntime

# Cherry will override the zeebeClient bean
spring:
  main:
    allow-bean-definition-overriding: true

# --------------------- H2 - default
spring.datasource:
  url: "jdbc:h2:file:./cherry.db"
  driver-class-name: "org.h2.Driver"
  username: "sa"
  password: "password"
spring.jpa.database-platform: "org.hibernate.dialect.H2Dialect"
org.hibernate.dialect: "H2Dialect"


# --------------------- Postgres
postgres.spring.datasource:
  url: "jdbc:postgresql://localhost/cherrydb"
  username: "camunda"
  password: "camunda"
  driverClassName: "org.postgresql.Driver"
postgres.spring.jpa.database-platform: "org.hibernate.dialect.PostgreSQL94Dialect"

postgres.org.hibernate.dialect: "PostgreSQL94Dialect"



# allow CLOB in Postgres
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation: true




spring.jpa:
  generate-ddl: true
  hibernate.ddl-auto: "update"

  properties:
    hibernate:
      format_sql: true
      show-sql: true


# logging.level.org.hibernate.SQL: TRACE
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder: TRACE
# logging.level.org.hibernate.postgresql : TRACE
# spring.jpa.properties.hibernate.show_sql: true
# spring.jpa.properties.hibernate.use_sql_comments: true
# spring.jpa.properties.hibernate.format_sql: true

